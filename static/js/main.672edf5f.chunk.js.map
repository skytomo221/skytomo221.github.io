{"version":3,"sources":["App.tsx","serviceWorker.ts","index.tsx"],"names":["App","className","href","src","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iQAwGeA,MApGf,WACE,OACE,yBAAKC,UAAU,OACb,uFADF,sHAGE,4FAHF,kCAIW,uBAAGC,KAAK,sBAAR,kEAJX,6FAI4E,6BAJ5E,+JAK8B,6BAL9B,uOAM4C,6BAN5C,iLAOqC,6BAPrC,iOAQ+C,6BAR/C,uFAS0B,6BAT1B,6CAUqB,uBAAGA,KAAK,oDAAR,sBAVrB,eAWE,4CACA,4BAAI,uBAAGA,KAAK,sBAAR,kEAAJ,iEACA,4BAAI,uBAAGA,KAAK,iDAAR,2EAAJ,4BACA,4BAAI,uBAAGA,KAAK,kCAAR,wCAAJ,2DACA,4BAAI,uBAAGA,KAAK,mCAAR,6BAAJ,4DACA,4BAAI,uBAAGA,KAAK,mDAAR,sEAAJ,wCACA,4BAAI,uBAAGA,KAAK,8DAAR,mIAAJ,wCACA,0HACA,4BACE,uBAAGA,KAAK,0CAAR,yBACA,yBAAKC,IAAI,mKACT,yBAAKA,IAAI,qKAHX,kIAKE,uBAAGD,KAAK,uDAAR,eAEF,4BACE,uBAAGA,KAAK,gDAAR,gBACA,yBAAKC,IAAI,uKACT,yBAAKA,IAAI,yKAHX,sGAKE,uBAAGD,KAAK,gDAAR,eAEF,4BACE,uBAAGA,KAAK,+CAAR,iBADF,gIAGE,uBAAGA,KAAK,+CAAR,eAEF,4BACE,uBAAGA,KAAK,6DAAR,SADF,wGAGE,uBAAGA,KAAK,uCAAR,eAEF,4BACE,uBAAGA,KAAK,iDAAR,qCADF,oKAGE,uBAAGA,KAAK,mEAAR,eAEF,4BACE,uBAAGA,KAAK,6DAAR,wBADF,oOAGE,uBAAGA,KAAK,sDAAR,eAEF,4BACE,uBAAGA,KAAK,oDAAR,sBADF,gKAGE,uBAAGA,KAAK,oDAAR,eAEF,4BACE,uBAAGA,KAAK,8DAAR,2BADF,2NAGE,uBAAGA,KAAK,yDAAR,eAEF,4BACE,uBAAGA,KAAK,oDAAR,sBADF,yJAGE,uBAAGA,KAAK,oDAAR,eAEF,4BACE,uBAAGA,KAAK,oDAAR,aADF,2EAGE,uBAAGA,KAAK,oDAAR,eAEF,4BACE,uBAAGA,KAAK,gDAAR,kBADF,oHAGE,uBAAGA,KAAK,gDAAR,eAEF,sFACA,4BAAI,uBAAGA,KAAK,kCAAR,WAAJ,2BACA,4BAAI,uBAAGA,KAAK,iCAAR,UAAJ,2BACA,4BAAI,uBAAGA,KAAK,wBAAR,WAAJ,4BACA,4BAAI,uBAAGA,KAAK,sCAAR,wCAAJ,0EACA,4BAAI,uBAAGA,KAAK,+BAAR,QAAJ,0BACA,4BAAI,uBAAGA,KAAK,4BAAR,SAAJ,wBACA,4BAAI,uBAAGA,KAAK,sCAAR,YAAJ,uBACA,4BAAI,uBAAGA,KAAK,sCAAR,YAAJ,uBACA,4BAAI,uBAAGA,KAAK,iCAAR,UAAJ,2BACA,4BAAI,uBAAGA,KAAK,oCAAR,WAAJ,uBACA,4BAAI,uBAAGA,KAAK,wCAAR,SAAJ,uBACA,4BAAI,uBAAGA,KAAK,wEAAR,aAAJ,2BACA,4BAAI,uBAAGA,KAAK,kCAAR,cAAJ,uBACA,4BAAI,uBAAGA,KAAK,uBAAR,QAAJ,kCACA,4BAAI,uBAAGA,KAAK,6BAAR,YAAJ,oCCvFcE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.672edf5f.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>冴えないskytomoの育ち方</h1>\n    世界のすみっこからこんにちは！skytomoです。\n      <h2>人工言語に興味ある？</h2>\n    Discordサーバ「<a href=\"discord.gg/sS5TgS2\">小さな言語交換会♡nipponjo</a>」をクリックして覗いてみよう！<br />\n        ここではゆるーく人工言語や雑談をすることができます。<br />\n          つまり、人工言語に詳しくなくても、興味があれば気軽に参加することができます。<br />\n            また、創作界隈などのどの分野の方でも参加していただけると、<br />\n              仮想世界を作ろうと試みている人工言語作者にとってとてもいい環境になります。<br />\n                ぜひ、参加してみてください！<br />\n                  さらなる詳細は<a href=\"https://100-matters.hatenablog.jp/entry/nipponjo\">こちら</a>から\n      <h2>活動</h2>\n      <li><a href=\"discord.gg/sS5TgS2\">小さな言語交換会♡nipponjo</a>（Discordサーバ）の管理人</li>\n      <li><a href=\"http://zpdic.ziphil.com/dictionary/lineparine\">【ZpDIC版】リパライン語辞書</a>の製作者</li>\n      <li><a href=\"https://twitter.com/lojban_tan\">ロジバンたん</a> (@lojban_tan）のマネージャ</li>\n      <li><a href=\"https://twitter.com/unicode_tan\">Unicodeちゃん</a> (@unicode_tan）のマネージャ</li>\n      <li><a href=\"https://pianists.github.io/PsMemoBlog/conworld/\">仮想世界アルビス（Alubis）</a>の共同制作者</li>\n      <li><a href=\"http://zpdic.ziphil.com/dictionary/skaitomon-zei-jbovlaste\">ロジバンたんのよく分かる日本語-ロジバン辞書</a>の共同制作者</li>\n      <h2>作成したプログラム・ライブラリ</h2>\n      <li>\n        <a href=\"https://www.nuget.org/packages/lojban/\">CSharp-Lojban-Project</a>\n        <img src=\"https://camo.githubusercontent.com/0282a53f64e220b58f4905b0e8bd1eef728d68a7/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f4c6f6a62616e2e737667\" />\n        <img src=\"https://camo.githubusercontent.com/af27f18dc9fa713788b77ff379510fbe6b3a29dd/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f64742f4c6f6a62616e2e737667\" /> |\n          ロジバンのパーサをC#で扱うためのライブラリ |\n        <a href=\"https://github.com/skytomo221/CSharp-Lojban-Project\">repository</a>\n      </li>\n      <li>\n        <a href=\"https://www.nuget.org/packages/Otamajakushi/\">Otamajakushi</a>\n        <img src=\"https://camo.githubusercontent.com/c460e9c5cf75ece84f2e49103b4156252e7fda50/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f4f74616d616a616b75736869\" />\n        <img src=\"https://camo.githubusercontent.com/0d3b226d6962837299e0e6bc60c5565ca50ed13f/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f64742f4f74616d616a616b75736869\" /> |\n              OTM-JSON形式をC#で扱うためのライブラリ |\n        <a href=\"https://www.nuget.org/packages/Otamajakushi/\">repository</a>\n      </li>\n      <li>\n        <a href=\"https://github.com/skytomo221/Q0-Calculator\">Q0-Calculator</a> |\n        課題のために作られた簡単な電卓プログラム |\n        <a href=\"https://github.com/skytomo221/Q0-Calculator\">repository</a>\n      </li>\n      <li>\n        <a href=\"https://twitter.com/skytomo221/status/1187893849487622144\">Infy4</a> |\n        ライフゲームを描画するプログラム |\n        <a href=\"https://github.com/skytomo221/Infy4\">repository</a>\n      </li>\n      <li>\n        <a href=\"http://zpdic.ziphil.com/dictionary/lineparine\">LineparineOneToManyJsonDictionary</a> |\n        pdic形式のリパライン語辞書をOTM-JSON形式に変換するプログラム |\n        <a href=\"https://github.com/skytomo221/LineparineOneToManyJsonDictionary\">repository</a>\n      </li>\n      <li>\n        <a href=\"https://twitter.com/lojban_tan/status/1258695378926370816\">LojbanWordsFrequency</a> |\n        ロジバンでジップの法則（Zipf's law）が成り立つか証明するための頻度分析プログラム |\n        <a href=\"https://github.com/skytomo221/LojbanWordsFrequency\">repository</a>\n      </li>\n      <li>\n        <a href=\"https://github.com/skytomo221/YuurianCalendarApp\">YuurianCalendarApp</a> |\n        C#で修正リパライン歴のカレンダーを計算するプログラム |\n        <a href=\"https://github.com/skytomo221/YuurianCalendarApp\">repository</a>\n      </li>\n      <li>\n        <a href=\"http://zpdic.ziphil.com/dictionary/skaitomon-zei-jbovlaste\">skaitomon-zei-jbovlaste</a> |\n        「ロジバンたんのよく分からないロジバン-日本語辞書」を作成するプログラム |\n        <a href=\"https://github.com/skytomo221/skaitomon-zei-jbovlaste\">repository</a>\n      </li>\n      <li>\n        <a href=\"https://github.com/skytomo221/brainfuck-compiler\">brainfuck-compiler</a> |\n        BrainfuckをC言語に変換にしてgccでコンパイルするプログラム |\n        <a href=\"https://github.com/skytomo221/brainfuck-compiler\">repository</a>\n      </li>\n      <li>\n        <a href=\"https://github.com/nitkagoshima-sysken/SysLaBot3\">SysLaBot3</a> |\n        Discordの部活サーバのボット |\n        <a href=\"https://github.com/nitkagoshima-sysken/SysLaBot3\">repository</a>\n      </li>\n      <li>\n        <a href=\"https://github.com/skytomo221/OthelloProject\">OthelloProject</a> |\n        課題のために作られたオセロプログラム |\n        <a href=\"https://github.com/skytomo221/OthelloProject\">repository</a>\n      </li>\n      <h2>ソーシャルメディア</h2>\n      <li><a href=\"https://twitter.com/skytomo221\">Twitter</a>（@skytomo221）</li>\n      <li><a href=\"https://github.com/skytomo221\">GitHub</a>（@skytomo221）</li>\n      <li><a href=\"https://discord.com/\">Discord</a>（skytomo#9913）</li>\n      <li><a href=\"https://100-matters.hatenablog.jp/\">はてなブログ</a> 「私が気にする100の事象」</li>\n      <li><a href=\"https://note.com/skytomo221\">note</a>（skytomo221）</li>\n      <li><a href=\"http://zpdic.ziphil.com/\">ZpDIC</a>（@skytomo）</li>\n      <li><a href=\"https://connpass.com/user/skytomo/\">connpass</a>（skytomo）</li>\n      <li><a href=\"https://teratail.com/users/skytomo\">teratail</a>（skytomo）</li>\n      <li><a href=\"https://gitlab.com/skytomo221\">GitLab</a>（@skytomo221）</li>\n      <li><a href=\"https://atcoder.jp/users/skytomo\">AtCoder</a>（skytomo）</li>\n      <li><a href=\"https://www.pixiv.net/users/19716513\">Pixiv</a>（skytomo）</li>\n      <li><a href=\"https://ja.wikipedia.org/wiki/%E5%88%A9%E7%94%A8%E8%80%85:Skytomo221\">Wikipedia</a>（@Skytomo221）</li>\n      <li><a href=\"https://soundcloud.com/skytomo\">SoundCloud</a>（skytomo）</li>\n      <li><a href=\"https://line.me/ja/\">LINE</a>（非公開）</li>\n      <li><a href=\"https://www.facebook.com/\">Facebook</a>（非公開）</li>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}